@model ML.Usuario
@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="~/Content/styles.css" />
<link href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/themes/base/jquery-ui.css" rel="Stylesheet" type="text/css" />



<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Usuario</h2>


        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>



    <div class="row validation">
        @using (Html.BeginForm("Form", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            <div class="col-md-4">

                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Username)
                        @if (Model.Action == "Add")
                        {
                            @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @id = "txtUsername",})
                          
                        }
                        @if (Model.Action == "Update")
                        {
                            @Html.TextBoxFor(model => model.Username, new { @class = "form-control", @id = "txtUsername", @readonly = "readonly" })
                        }
                    
                        
                        @Html.ValidationMessageFor(model => model.Username)
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Nombre)

                       
                        @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre", @onkeypress = "return SoloLetras(event,id,'lblErrorNombre' )" })


                        @Html.ValidationMessageFor(model => model.Nombre)
                        <label id="lblErrorNombre" class="error_color"></label>
                    
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ApellidoPaterno, "Apellido Paterno")
                        @Html.TextBoxFor(model => model.ApellidoPaterno, new { @class = "form-control", @id = "txtApellidoPaterno", @onkeypress = "return SoloLetras(event,id,'lblErrorApellidoP')" })
                        @Html.ValidationMessageFor(model => model.ApellidoPaterno)
                        <label id="lblErrorApellidoP" class="error_color"></label>
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.ApellidoMaterno, "Apellido Materno")
                        @Html.TextBoxFor(model => model.ApellidoMaterno, new { @class = "form-control", @id = "txtApellidoMaterno", @onkeypress = "return SoloLetras(event,id,'lblErrorApellidoM')" })
                        @Html.ValidationMessageFor(model => model.ApellidoMaterno)
                        <label id="lblErrorApellidoM" class="error_color"></label>
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-md-12">
                        <input type="submit" value="Guardar" class="btn btn-success" />
                        @Html.ActionLink("Regresar", "GetAll", "Usuario", htmlAttributes: new { @class = "btn btn-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-4">

                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Email)
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @id = "txtEmail", @onblur = "ValidarEmail()" })
                      
                        @Html.ValidationMessageFor(model => model.Email)

                        <label id="lblErrorEmail" class="error_color"></label>
                      
                    </div>
                </div>
                <div class="form-group ">
                @if (Model.Action == "Add")
                {
                    <div class="col-md-12">

                        @Html.LabelFor(model => model.Password)
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "txtPassword"})
                        @Html.ValidationMessageFor(model => model.Password)
                    </div>
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Password, "Confirma tu password")
                        @Html.PasswordFor(model => model.Password, new { @class = "form-control", @id = "txtConfirmPassword", @onkeyup = "PasswordMatch()" })
                        @Html.ValidationMessageFor(model => model.Password)

                        <label id="lblErrorPassword" class="error_color"></label>
                    </div>
                }
                        
                @if (Model.Action == "Update")
                {
                    @Html.HiddenFor(model => model.Password);
                }
                       
                       
                 
                </div>
                <div class="form-inline">
                  
                        <div class="col-md-12 ">
                            @Html.LabelFor(model => model.FechaNacimiento)
                            @Html.TextBoxFor(model => model.FechaNacimiento,"{0:MM/dd/yyyy}", new { @class = "form-control", @id = "txtFechaNacimiento"  })



                            @Html.ValidationMessageFor(model => model.FechaNacimiento)




                    
                    </div>
                  
                </div>
               
            </div>
            <div class="col-md-4">
                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Telefono)
                        @Html.TextBoxFor(model => model.Telefono, new { @class = "form-control", @id = "txtTelefono" })
                        @Html.ValidationMessageFor(model => model.Telefono)
                        <label id="lblErrorTelefono" class="error_color"></label>
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Sexo)
                        <div>
                            @Html.RadioButtonFor(model => model.Sexo, "Hombre")@Html.Label("Hombre")
                        </div>
                        <div>
                            @Html.RadioButtonFor(model => model.Sexo, "Mujer")@Html.Label("Mujer")

                        </div>
                        <div>
                            @Html.RadioButtonFor(model => model.Sexo, "Desconocido")@Html.Label("Desconocido")
                        </div>
                        <div>
                            @Html.RadioButtonFor(model => model.Sexo, "No Aplica")@Html.Label("No aplica")
                        </div>
                        @Html.ValidationMessageFor(model => model.Sexo)

                    </div>
                </div>
             

                <div class="form-group ">
                    <div class="col-md-12">
                        @Html.LabelFor(model => model.Rol, new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.Rol.IdRol, new SelectList(Model.Rol.Roles, "IdRol", "Nombre"), "Seleccione una opción", htmlAttributes: new { id = "ddlDepartamento", @class = "form-control" })
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">

                        @Html.HiddenFor(model => model.Action)
                    </div>
                </div>
                <div class="form-group ">
                    <div class="col-md-12">
                        
                        @Html.HiddenFor(model => model.Status)
                    </div>
                </div>
            </div>

            
        }
    </div>
</div>

<link rel="stylesheet" href="//code.jquery.com/ui/1.11.4/themes/smoothness/jquery-ui.css" />

@*<!-- jQuery 1.10-2 being used -->
<script src="//code.jquery.com/jquery-1.10.2.js"></script>

<!-- jQuery UI library -->
<script src="//code.jquery.com/ui/1.11.4/jquery-ui.js"></script>

<link rel="stylesheet" href="/resources/demos/style.css" />*@

@Scripts.Render("~/bundles/jquery")

<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>


<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.6/jquery.min.js" type="text/javascript"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.8/jquery-ui.min.js" type="text/javascript"></script>



<script type="text/javascript">
    $(document).ready(function () {       
        $("#txtTelefono").keypress(function (e) {          
            if (e.which != 8 && e.which != 0 && (e.which < 48 || e.which > 57)) {
                
                $("#txtTelefono").css({ "border": "1px solid red" });
                $("#lblErrorTelefono").text("Sólo se aceptan números");
                return false;
            }
            else {
                $("#txtTelefono").css({ "border": "1px solid #cccccc" });
                $("#lblErrorTelefono").text("");
                return true;
            }
        });


    });


    var j = jQuery.noConflict();

    j(function () {
        j("#txtFechaNacimiento").datepicker({
            dateFormat: 'mm-dd-yy',
            showOn: 'button',
            buttonImage: "../../Content/calendario.png",
            buttonImageOnly: true,
            changeMonth: true,
            changeYear: true

        });
        $(".ui-datepicker-trigger").css("width", "30px");
        $(".ui-datepicker-trigger").css("height", "30px");
    });



</script>

 
<script type="text/javascript">


        function SoloLetras(e,id,controlId) {
            //var ControlId = e.srcElement.id;
           
            var key = e.keyCode || e.which;
            var letra = String.fromCharCode(key).toLowerCase();
            var caracter = e.key;
            if (!/^[a-zA-Z]*$/g.test(letra)) {
               
                $("#"+id ).css({ "border": "1px solid red" });
                $("#"+controlId).text("Sólo se aceptan letras");
                                                
                return false;
            }
            else {
               
                $("#"+controlId).text("");
                $("#"+id).css({ "border": "1px solid #cccccc" });
             
                return true;
            }

          }

          function ValidarEmail() {
              var email = $('#txtEmail').val();
              var regex = /^([A-Za-z0-9_\-\.])+\@@([A-Za-z0-9_\-\.])+\.([A-Za-z]{2,4})$/;
              if (regex.test(email)) {
                  $("#txtEmail").css({ "border": "1px solid green" });
                  $("#lblErrorEmail").text("");

                  return true;
              } else {
     
                  $("#lblErrorEmail").text("Ingrese un correo válido");
                  $("#txtEmail").css({ "border": "1px solid red" });
                  return false;
              }

          }

          function PasswordMatch() {
              var password = $("#txtPassword").val();
              var confirmPassword = $("#txtConfirmPassword").val();
              if (password != confirmPassword) {
                  $("#lblErrorPassword").text("Las contraseñas no coinciden");
                  $("#txtConfirmPassword").css({ "border": "1px solid red" });
                  $("#txtPassword").css({ "border": "1px solid #cccccc" });
              }
              
              else {
                  $("#txtPassword").css({ "border": "1px solid green" });
                  $("#txtConfirmPassword").css({ "border": "1px solid green" });
                  $("#lblErrorPassword").text("");
              }
              if ($("#txtPassword").val() == "" ) {
                  $("#txtConfirmPassword").css({ "border": "1px solid red" });
                  $("#txtPassword").css({ "border": "1px solid #cccccc" });
              }
             
          }



</script>

 


