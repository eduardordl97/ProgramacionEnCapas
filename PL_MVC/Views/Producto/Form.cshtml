@model ML.Producto

@{
    ViewBag.Title = "Form";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<div class="container">
    <div class="row">
        <div class="col-md-12">
            <h2>Producto</h2>


        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <hr />
        </div>
    </div>


   
        <div class="row">
            @using (Html.BeginForm("Form", "Producto", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <div class="col-md-4">
                    
                  
                    <div class="form-group ">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Nombre)
                            @Html.TextBoxFor(model => model.Nombre, new { @class = "form-control", @id = "txtNombre" })
                            @Html.ValidationMessageFor(model => model.Nombre)
                        </div>
                    </div>
                    <div class="form-group ">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.PrecioUnitario)
                            @Html.TextBoxFor(model => model.PrecioUnitario,"{0:#.#}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PrecioUnitario)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Stock)

                            @Html.TextBoxFor(model => model.Stock, "{0:#.#}", new { @class = "form-control" })


                            @Html.ValidationMessageFor(model => model.Stock)
                        </div>
                    </div>

                   <div class="form-group ">
                        <div class="col-md-12">

                            @Html.LabelFor(model => model.IdProducto, new { @class = "hidden" })
                            @Html.TextBoxFor(model => model.IdProducto, new { @class = "hidden form-control" })
                            @Html.ValidationMessageFor(model => model.IdProducto)

                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-12">
                            <input type="submit" value="Guardar" class="btn btn-success" />
                            @Html.ActionLink("Regresar", "GetAll", "Producto", htmlAttributes: new { @class = "btn btn-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-md-4">

                    


                    <div class="form-group">
                        <div class="col-md-12">
                            @*@Html.LabelFor(model => model.Departamento.Area)*@
                            @*@Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona una opción", new { @class = "form-control" })*@
                            @Html.LabelFor(model => model.Departamento.Area, new { @class = "control-label" })
                            @if (Model.Departamento.Area == null)
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Area", htmlAttributes: new { id = "ddlArea", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona un Area", htmlAttributes: new { id = "ddlArea", @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.Departamento.Area)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @*@Html.LabelFor(model => model.Departamento.Area)*@
                            @*@Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona una opción", new { @class = "form-control" })*@
                            @Html.LabelFor(model => model.Departamento, new { @class = "control-label" })
                            @if (Model.Departamento == null)
                            {
                            @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Departamento", htmlAttributes: new { id = "ddlDepartamento", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Departamento.IdDepartamento, new SelectList(Model.Departamento.Departamentos, "IdDepartamento", "Nombre"), "Selecciona un Departamento", htmlAttributes: new { id = "ddlDepartamento", @class = "form-control" })
                            }
                            
                            @Html.ValidationMessageFor(model => model.Departamento)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @*@Html.LabelFor(model => model.Departamento.Area)*@
                            @*@Html.DropDownListFor(model => model.Departamento.Area.IdArea, new SelectList(Model.Departamento.Area.Areas, "IdArea", "Nombre"), "Selecciona una opción", new { @class = "form-control" })*@
                            @Html.LabelFor(model => model.Proveedor, new { @class = "control-label" })
                            @if (Model.Departamento == null)
                            {
                                @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(string.Empty, "Value", "Text"), "Selecciona un Proveedor", htmlAttributes: new { id = "ddlProveedor", @class = "form-control" })
                            }
                            else
                            {
                                @Html.DropDownListFor(model => model.Proveedor.IdProveedor, new SelectList(Model.Proveedor.Proveedores, "IdProveedor", "Nombre"), "Selecciona un Proveedor", htmlAttributes: new { id = "ddlProveedor", @class = "form-control" })
                            }
                            @Html.ValidationMessageFor(model => model.Proveedor)
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Descripcion)
                            @Html.TextAreaFor(model => model.Descripcion, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Descripcion)
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            @Html.LabelFor(model => model.Imagen)
                            <input type="file" name="ImagenData" onchange="readURL(this);">
                            @if (Model.Imagen != null)
                            {

                                <img id="ImagenPreview" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Imagen)" width="100" height="100" />
                            }
                            else
                            {
                                <img id="ImagenPreview" src="~/Content/NoImg.jpg" style=" height:150px; width:150px;" />

                            }

                            @Html.ValidationMessageFor(model => model.Imagen)
                        </div>
                        @Html.HiddenFor(model => model.Imagen)
                    </div>

                    

                    
                </div>
            }
        </div>
    </div>


@Scripts.Render("~/bundles/jquery")
<script src="../../Scripts/jquery-1.10.2.js" type="text/javascript"></script>
<script src="../../Scripts/jquery-1.10.2.min.js" type="text/javascript"></script>

<script type="text/javascript">
    $(document).ready(function () {

        $("#ddlArea").change(function () {
            //alert('Accedió al método del ddl');

            $("#ddlDepartamento").empty();
            //$("#ddlProveedor").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetDepartamento")',
                dataType: 'json',
                data: { IdArea: $("#ddlArea").val() },
                success: function (municipios) {

                    //alert('Accedió a la acción success');

                    $.each(municipios, function (i, municipios) {
                        $("#ddlDepartamento").append('<option value="'
                                                   + municipios.IdDepartamento + '">'
                                                   + municipios.Nombre + '</option>');
                    });
                },
                error: function (ex) {
                    //alert('Accedió al método del ddl');


                    alert('Failed.' + ex);
                }
            });
        });


    })

</script>

<script type="text/javascript">
    function readURL(input) {
        alert("Accedió")
        if (input.files && input.files[0]) {
            alert("Accedió al if")
            var reader = new FileReader();

            reader.onload = function (e) {
                $('#ImagenPreview').attr('src', e.target.result);
            };
            reader.readAsDataURL(input.files[0]);
        }
    }


</script>











